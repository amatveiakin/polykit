// Formulas with sum_looped are superseeded by formulas with CorrBundle

auto expr =
  +6 * Lido5(1,2,3,4)
  +3 * sum_looped(&CorrVec, 4, {1,1,2,2,3,4}, Sign::plus)
  +2 * sum_looped(&CorrVec, 4, {1,2,2,2,3,3}, Sign::plus)
  +2 * sum_looped(&CorrVec, 4, {1,1,2,2,2,3}, Sign::plus)
;   // Total zero

auto expr =
  +2 * Lido4(1,2,3,4)
  +1 * sum_looped(&CorrVec, 4, {1,2,3,4,4}, Sign::alternating)
  +2 * sum_looped(&CorrVec, 4, {1,2,2,2,3}, Sign::alternating)
;   // Total zero

auto expr =
  -2 * Lido5(1,2,3,4,5,6)
  +2 * Corr(1,2,3,4,5,6)
  +2 * sum_looped(&CorrVec, 6, {1,1,2,4,5,6}, Sign::plus)
  +2 * sum_looped(&CorrVec, 6, {1,1,2,3,4,6}, Sign::plus)
  +2 * sum_looped(&CorrVec, 6, {1,2,2,2,3,5}, Sign::plus)
  + sum_looped(&CorrVec, 6, {1,1,2,2,4,5}, Sign::plus)
  + sum_looped(&CorrVec, 6, {1,1,2,4,4,5}, Sign::plus, Loop::half)
  + sum_looped(&CorrVec, 6, {1,2,2,4,5,5}, Sign::plus, Loop::half)
  + sum_looped(&CorrVec, 6, {1,1,2,2,3,6}, Sign::plus, Loop::half)
  + sum_looped(&CorrVec, 6, {1,1,2,3,6,6}, Sign::plus, Loop::half)
  + sum_looped(&CorrVec, 6, {1,2,2,3,3,6}, Sign::plus, Loop::half)
  + sum_looped(&CorrVec, 6, {1,2,3,3,6,6}, Sign::plus, Loop::half)
;  // Has at most 3 vars per term

DeltaExpr LiSon(int x1, int x2, int x3, int x4, int x5, int x6) {
  return
    +2*Corr(x1,x1,x1,x2,x4,x6)
     + Corr(x1,x1,x2,x2,x3,x6)
     + Corr(x1,x1,x2,x2,x4,x5)
    +2*Corr(x1,x1,x2,x3,x4,x6)
     + Corr(x1,x1,x2,x3,x6,x6)
     + Corr(x1,x1,x2,x4,x4,x5)
    +2*Corr(x1,x1,x2,x4,x5,x6)
     + Corr(x1,x1,x3,x4,x4,x6)
     + Corr(x1,x1,x3,x4,x6,x6)
     + Corr(x1,x1,x4,x4,x5,x6)
     + Corr(x1,x1,x4,x5,x6,x6)
    +2*Corr(x1,x2,x2,x2,x3,x5)
     + Corr(x1,x2,x2,x3,x3,x6)
    +2*Corr(x1,x2,x2,x3,x4,x5)
    +2*Corr(x1,x2,x2,x3,x5,x6)
     + Corr(x1,x2,x2,x4,x5,x5)
    +2*Corr(x1,x2,x3,x3,x4,x6)
     + Corr(x1,x2,x3,x3,x6,x6)
    +2*Corr(x1,x2,x3,x4,x4,x5)
    +2*Corr(x1,x2,x3,x4,x5,x6)
    +2*Corr(x1,x2,x3,x5,x6,x6)
     + Corr(x1,x2,x4,x4,x5,x5)
    +2*Corr(x1,x2,x4,x5,x5,x6)
     + Corr(x1,x3,x3,x4,x4,x6)
     + Corr(x1,x3,x3,x4,x6,x6)
    +2*Corr(x1,x3,x4,x4,x4,x5)
    +2*Corr(x1,x3,x4,x4,x5,x6)
    +2*Corr(x1,x3,x4,x5,x6,x6)
    +2*Corr(x1,x3,x5,x6,x6,x6)
     + Corr(x1,x4,x4,x5,x5,x6)
     + Corr(x1,x4,x5,x5,x6,x6)
     + Corr(x2,x2,x3,x3,x4,x5)
     + Corr(x2,x2,x3,x3,x5,x6)
     + Corr(x2,x2,x3,x4,x5,x5)
     + Corr(x2,x2,x3,x5,x5,x6)
    +2*Corr(x2,x3,x3,x3,x4,x6)
     + Corr(x2,x3,x3,x4,x4,x5)
    +2*Corr(x2,x3,x3,x4,x5,x6)
     + Corr(x2,x3,x3,x5,x6,x6)
     + Corr(x2,x3,x4,x4,x5,x5)
    +2*Corr(x2,x3,x4,x5,x5,x6)
     + Corr(x2,x3,x5,x5,x6,x6)
    +2*Corr(x2,x4,x5,x5,x5,x6)
  ;
}

auto expr =
  -2 * LidoSymm5(1,2,3,4,5,6)
  + LiSon(1,2,3,4,5,6)
  + Corr(1,1,2,2,3,4)
  + Corr(1,1,2,2,5,6)
  + Corr(1,1,2,3,4,4)
  + Corr(1,1,2,5,6,6)
  + Corr(1,2,2,3,3,4)
  + Corr(1,2,2,5,5,6)
  + Corr(1,2,3,3,4,4)
  + Corr(1,2,5,5,6,6)
  + Corr(3,3,4,4,5,6)
  + Corr(3,3,4,5,6,6)
  + Corr(3,4,4,5,5,6)
  + Corr(3,4,5,5,6,6)
;
