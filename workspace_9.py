import itertools
import time

import format

from tensor import Inf, Tensor
from lyndon import lyndon_factorize, to_lyndon_basis
from enumerator import Enumerator
from autosolve import *
from polylog_gen import *
from shuffle import *
from util import *
from word_algebra import *


def print_with_title(msg, expr):
    print(f"{msg} - {len(expr)} terms:\n{expr}\n")

def print_eliminations(eliminations, min_distinct):
    print(f"\n~~~ Known eliminations >= {min_distinct} ~~~\n")
    for _, v in eliminations.items():
        print(f"{v[0]}\nincluding\n{words_with_n_distinct_chars(v[0], min_distinct)}\nvia\n{v[1]}\n")
    print()

def W(*args):
    return Linear({args: 1})


# expr = Linear()
# num_points = 9
# asc = list(range(1, num_points+1))
# for i in range(num_points):
#     expr += Li6(rotate_list(asc, i)[:8])

# lyndon = to_lyndon_basis(project_on_x1(expr))
# print_with_title("Expression", expr.annotations())
# print_with_title("Lyndon", lyndon)
# print_with_title("At least 6 distinct", words_with_n_distinct_chars(lyndon, 6))
# print_with_title("At least 5 distinct", words_with_n_distinct_chars(lyndon, 5))


# This is:
#  + Li6(1,2,3,4,5,6,7,8)
#  + Li6(2,3,4,5,6,7,8,9)
#  + Li6(3,4,5,6,7,8,9,1)
#  + Li6(4,5,6,7,8,9,1,2)
#  + Li6(5,6,7,8,9,1,2,3)
#  + Li6(6,7,8,9,1,2,3,4)
#  + Li6(7,8,9,1,2,3,4,5)
#  + Li6(8,9,1,2,3,4,5,6)
#  + Li6(9,1,2,3,4,5,6,7)
goal = (
 - W(2, 2, 3, 5, 8, 8)
 - W(2, 2, 3, 6, 6, 7)
 + W(2, 2, 3, 6, 8, 8)
 + W(2, 2, 4, 5, 8, 8)
 - W(2, 2, 4, 6, 8, 8)
 + W(2, 2, 3, 5, 7, 8)
 - W(2, 2, 3, 6, 7, 8)
 - W(2, 2, 4, 5, 7, 8)
 + W(2, 2, 4, 6, 7, 8)
 - W(2, 3, 4, 5, 8, 8)
 + W(2, 3, 4, 6, 8, 8)
 - W(2, 3, 5, 6, 8, 8)
 - W(2, 3, 5, 8, 8, 8)
 - W(2, 3, 6, 6, 6, 7)
 + W(2, 3, 6, 6, 8, 8)
 + W(2, 3, 6, 8, 8, 8)
 + W(2, 4, 4, 5, 8, 8)
 - W(2, 4, 4, 6, 8, 8)
 + W(2, 4, 5, 6, 8, 8)
 + W(2, 4, 5, 8, 8, 8)
 - W(2, 4, 6, 6, 8, 8)
 - W(2, 4, 6, 8, 8, 8)
 - W(2, 3, 6, 6, 7, 8)
 + W(2, 4, 6, 6, 7, 8)
 + W(2, 3, 5, 7, 8, 8)
 - W(2, 3, 6, 7, 8, 8)
 - W(2, 4, 5, 7, 8, 8)
 + W(2, 4, 6, 7, 8, 8)
 + W(3, 5, 7, 8, 8, 8)
 - W(3, 5, 8, 8, 8, 8)
 - W(3, 6, 7, 8, 8, 8)
 + W(3, 6, 8, 8, 8, 8)
 - W(4, 5, 7, 8, 8, 8)
 + W(4, 5, 8, 8, 8, 8)
 + W(4, 6, 7, 8, 8, 8)
 - W(4, 6, 8, 8, 8, 8)
 + W(3, 4, 5, 7, 8, 8)
 - W(3, 4, 5, 8, 8, 8)
 - W(3, 4, 6, 7, 8, 8)
 + W(3, 4, 6, 8, 8, 8)
 + W(3, 5, 6, 7, 8, 8)
 - W(3, 5, 6, 8, 8, 8)
 - W(3, 6, 6, 7, 8, 8)
 + W(3, 6, 6, 8, 8, 8)
 - W(4, 4, 5, 7, 8, 8)
 + W(4, 4, 5, 8, 8, 8)
 + W(4, 4, 6, 7, 8, 8)
 - W(4, 4, 6, 8, 8, 8)
 - W(4, 5, 6, 7, 8, 8)
 + W(4, 5, 6, 8, 8, 8)
 + W(4, 6, 6, 7, 8, 8)
 - W(4, 6, 6, 8, 8, 8)
 - W(3, 4, 4, 5, 8, 8)
 + W(3, 4, 4, 6, 8, 8)
 - W(3, 4, 5, 6, 8, 8)
 - W(3, 4, 6, 6, 7, 8)
 + W(3, 4, 6, 6, 8, 8)
 + W(3, 5, 6, 6, 7, 8)
 - W(3, 5, 6, 6, 8, 8)
 - W(3, 6, 6, 6, 7, 8)
 + W(3, 6, 6, 6, 8, 8)
 - W(4, 4, 4, 5, 7, 8)
 + W(4, 4, 4, 5, 8, 8)
 - W(4, 4, 4, 6, 8, 8)
 - W(4, 4, 5, 6, 7, 8)
 + W(4, 4, 5, 6, 8, 8)
 + W(4, 4, 6, 6, 7, 8)
 - W(4, 4, 6, 6, 8, 8)
 - W(4, 5, 6, 6, 7, 8)
 + W(4, 5, 6, 6, 8, 8)
 + W(4, 6, 6, 6, 7, 8)
 - W(4, 6, 6, 6, 8, 8)
 - W(3, 6, 6, 6, 6, 7)
 - W(4, 4, 4, 4, 5, 7)
 + W(4, 4, 4, 4, 6, 7)
 - W(4, 4, 4, 5, 6, 7)
 + W(4, 4, 4, 6, 6, 7)
 - W(4, 4, 5, 6, 6, 7)
 + W(4, 4, 6, 6, 6, 7)
 - W(4, 5, 6, 6, 6, 7)
 + W(4, 6, 6, 6, 6, 7)
 + W(3, 3, 6, 8, 9, 9)
 - W(3, 3, 5, 8, 9, 9)
 - W(3, 3, 6, 7, 9, 9)
 + W(3, 3, 5, 7, 9, 9)
 - W(3, 4, 6, 8, 9, 9)
 + W(4, 5, 5, 8, 9, 9)
 + W(3, 4, 5, 8, 9, 9)
 + W(3, 4, 6, 7, 9, 9)
 - W(3, 4, 5, 7, 9, 9)
 - W(3, 3, 4, 6, 8, 9)
 + W(3, 3, 3, 6, 8, 9)
 + W(3, 3, 4, 5, 8, 9)
 - W(3, 3, 3, 5, 8, 9)
 + W(3, 3, 4, 6, 7, 9)
 - W(3, 3, 3, 6, 7, 9)
 - W(3, 3, 4, 5, 7, 9)
 + W(3, 3, 3, 5, 7, 9)
 + W(3, 3, 6, 7, 8, 9)
 - W(3, 3, 5, 7, 8, 9)
 + W(3, 3, 5, 6, 8, 9)
 - W(3, 3, 5, 5, 8, 9)
 - W(3, 3, 6, 7, 7, 9)
 + W(3, 3, 5, 7, 7, 9)
 - W(3, 3, 5, 6, 7, 9)
 + W(3, 3, 5, 5, 7, 9)
 + W(4, 5, 5, 5, 8, 9)
 + W(3, 4, 5, 5, 8, 9)
 - W(3, 4, 5, 5, 7, 9)
 + W(3, 3, 3, 3, 6, 8)
 - W(3, 3, 3, 3, 5, 8)
 - W(3, 3, 3, 3, 6, 7)
 + W(3, 3, 3, 3, 5, 7)
 + W(3, 3, 6, 7, 7, 8)
 - W(3, 3, 5, 7, 7, 8)
 - W(3, 3, 4, 6, 7, 8)
 + W(3, 3, 3, 6, 7, 8)
 + W(3, 3, 4, 5, 7, 8)
 - W(3, 3, 3, 5, 7, 8)
 + W(3, 3, 5, 6, 7, 8)
 - W(3, 3, 5, 5, 7, 8)
 - W(3, 3, 4, 5, 6, 8)
 + W(3, 3, 3, 5, 6, 8)
 - W(3, 3, 3, 4, 6, 8)
 + W(3, 3, 4, 5, 5, 8)
 - W(3, 3, 3, 5, 5, 8)
 + W(3, 3, 3, 4, 5, 8)
 + W(3, 3, 5, 5, 6, 8)
 - W(3, 3, 5, 5, 5, 8)
 - W(3, 3, 6, 7, 7, 7)
 + W(3, 3, 5, 7, 7, 7)
 + W(3, 3, 4, 6, 7, 7)
 - W(3, 3, 3, 6, 7, 7)
 - W(3, 3, 4, 5, 7, 7)
 + W(3, 3, 3, 5, 7, 7)
 - W(3, 3, 5, 6, 7, 7)
 + W(3, 3, 5, 5, 7, 7)
 + W(3, 3, 4, 5, 6, 7)
 - W(3, 3, 3, 5, 6, 7)
 + W(3, 3, 3, 4, 6, 7)
 - W(3, 3, 4, 5, 5, 7)
 + W(3, 3, 3, 5, 5, 7)
 - W(3, 3, 3, 4, 5, 7)
 - W(3, 3, 5, 5, 6, 7)
 + W(3, 3, 5, 5, 5, 7)
 + W(3, 4, 5, 5, 7, 8)
 - W(3, 4, 5, 5, 6, 8)
 + W(4, 5, 5, 5, 5, 8)
 + W(3, 4, 5, 5, 5, 8)
 + W(4, 6, 7, 7, 7, 7)
 - W(4, 5, 7, 7, 7, 7)
 + W(4, 5, 6, 7, 7, 7)
 + W(3, 4, 6, 7, 7, 7)
 - W(4, 5, 5, 7, 7, 7)
 + W(4, 5, 5, 6, 7, 7)
 + W(3, 4, 5, 6, 7, 7)
 - W(4, 5, 5, 5, 7, 7)
 - W(3, 4, 5, 5, 7, 7)
 + W(4, 5, 5, 5, 6, 7)
 + W(3, 4, 5, 5, 6, 7)
 - W(4, 5, 5, 5, 5, 7)
 - W(3, 4, 5, 5, 5, 7)
 - W(5, 6, 8, 9, 9, 9)
 + W(5, 7, 8, 9, 9, 9)
 - W(4, 6, 9, 9, 9, 9)
 + W(5, 6, 9, 9, 9, 9)
 - W(5, 7, 9, 9, 9, 9)
 - W(5, 6, 7, 8, 9, 9)
 + W(5, 7, 7, 8, 9, 9)
 - W(5, 5, 6, 8, 9, 9)
 + W(2, 4, 6, 8, 9, 9)
 + W(5, 5, 7, 8, 9, 9)
 - W(2, 4, 7, 8, 9, 9)
 + W(2, 5, 7, 8, 9, 9)
 + W(5, 6, 7, 9, 9, 9)
 - W(5, 7, 7, 9, 9, 9)
 + W(5, 5, 6, 9, 9, 9)
 - W(5, 5, 7, 9, 9, 9)
 + W(2, 2, 4, 6, 8, 9)
 - W(2, 2, 4, 7, 8, 9)
 + W(2, 2, 5, 7, 8, 9)
 - W(5, 6, 7, 7, 8, 9)
 + W(5, 7, 7, 7, 8, 9)
 - W(5, 5, 6, 7, 8, 9)
 + W(5, 5, 7, 7, 8, 9)
 - W(2, 4, 7, 7, 8, 9)
 + W(2, 5, 7, 7, 8, 9)
 - W(5, 5, 5, 6, 8, 9)
 + W(5, 5, 5, 7, 8, 9)
 + W(5, 6, 7, 7, 9, 9)
 - W(5, 7, 7, 7, 9, 9)
 + W(5, 5, 6, 7, 9, 9)
 - W(2, 4, 6, 7, 9, 9)
 + W(2, 5, 6, 7, 9, 9)
 - W(5, 5, 7, 7, 9, 9)
 + W(2, 4, 7, 7, 9, 9)
 - W(2, 5, 7, 7, 9, 9)
 - W(4, 5, 5, 6, 9, 9)
 + W(5, 5, 5, 6, 9, 9)
 - W(2, 4, 5, 6, 9, 9)
 + W(2, 5, 5, 6, 9, 9)
 - W(5, 5, 5, 7, 9, 9)
 + W(2, 4, 5, 7, 9, 9)
 - W(2, 2, 4, 7, 7, 8)
 + W(2, 2, 5, 7, 7, 8)
 + W(2, 2, 4, 5, 6, 8)
 - W(2, 2, 2, 4, 7, 8)
 + W(2, 2, 2, 5, 7, 8)
 - W(2, 2, 4, 6, 7, 9)
 + W(2, 2, 5, 6, 7, 9)
 + W(2, 2, 4, 7, 7, 9)
 - W(2, 2, 5, 7, 7, 9)
 - W(2, 2, 4, 5, 6, 9)
 + W(2, 2, 5, 5, 6, 9)
 + W(2, 2, 4, 5, 7, 9)
 - W(5, 6, 7, 7, 7, 8)
 + W(5, 7, 7, 7, 7, 8)
 - W(5, 5, 6, 7, 7, 8)
 + W(5, 5, 7, 7, 7, 8)
 - W(2, 4, 7, 7, 7, 8)
 + W(2, 5, 7, 7, 7, 8)
 - W(5, 5, 5, 6, 7, 8)
 + W(5, 5, 5, 7, 7, 8)
 - W(5, 5, 5, 5, 6, 8)
 + W(2, 4, 5, 5, 6, 8)
 + W(5, 5, 5, 5, 7, 8)
 - W(2, 4, 5, 5, 7, 8)
 + W(5, 6, 7, 7, 7, 9)
 - W(5, 7, 7, 7, 7, 9)
 + W(5, 5, 6, 7, 7, 9)
 - W(5, 5, 7, 7, 7, 9)
 + W(2, 4, 7, 7, 7, 9)
 - W(2, 5, 7, 7, 7, 9)
 + W(5, 5, 5, 6, 7, 9)
 - W(5, 5, 5, 7, 7, 9)
 - W(4, 5, 5, 5, 6, 9)
 + W(5, 5, 5, 5, 6, 9)
 - W(2, 4, 5, 5, 6, 9)
 + W(2, 5, 5, 5, 6, 9)
 - W(5, 5, 5, 5, 7, 9)
 + W(2, 4, 5, 5, 7, 9)
 + W(2, 6, 8, 9, 9, 9)
 - W(2, 6, 7, 9, 9, 9)
 + W(2, 2, 6, 8, 9, 9)
 - W(2, 2, 6, 7, 9, 9)
 + W(2, 6, 7, 8, 9, 9)
 - W(2, 3, 6, 8, 9, 9)
 - W(2, 5, 5, 8, 9, 9)
 + W(2, 3, 5, 8, 9, 9)
 - W(2, 6, 7, 7, 9, 9)
 - W(2, 3, 5, 7, 9, 9)
 + W(2, 2, 2, 6, 8, 9)
 - W(2, 2, 3, 6, 8, 9)
 + W(2, 2, 3, 5, 8, 9)
 - W(2, 2, 2, 6, 7, 9)
 - W(2, 2, 3, 5, 7, 9)
 + W(2, 2, 6, 7, 8, 9)
 - W(2, 2, 5, 5, 8, 9)
 - W(2, 2, 6, 7, 7, 9)
 + W(2, 6, 7, 7, 8, 9)
 - W(2, 5, 5, 5, 8, 9)
 + W(2, 3, 5, 5, 8, 9)
 - W(2, 6, 7, 7, 7, 9)
 - W(2, 3, 5, 5, 7, 9)
 + W(2, 2, 2, 2, 6, 8)
 - W(2, 2, 2, 2, 6, 7)
 + W(2, 2, 2, 2, 5, 7)
 + W(2, 2, 6, 7, 7, 8)
 + W(2, 2, 2, 6, 7, 8)
 - W(2, 2, 3, 5, 6, 8)
 - W(2, 2, 2, 5, 5, 8)
 + W(2, 2, 3, 5, 5, 8)
 - W(2, 2, 5, 5, 5, 8)
 - W(2, 2, 6, 7, 7, 7)
 - W(2, 2, 2, 6, 7, 7)
 + W(2, 2, 3, 6, 7, 7)
 - W(2, 2, 5, 6, 7, 7)
 + W(2, 2, 5, 5, 7, 7)
 + W(2, 2, 3, 5, 6, 7)
 + W(2, 2, 2, 5, 5, 7)
 - W(2, 2, 3, 5, 5, 7)
 - W(2, 2, 5, 5, 6, 7)
 + W(2, 2, 5, 5, 5, 7)
 + W(2, 6, 7, 7, 7, 8)
 + W(2, 3, 5, 5, 7, 8)
 - W(2, 3, 5, 5, 6, 8)
 - W(2, 5, 5, 5, 5, 8)
 + W(2, 3, 5, 5, 5, 8)
 - W(2, 6, 7, 7, 7, 7)
 - W(2, 5, 6, 7, 7, 7)
 + W(2, 3, 6, 7, 7, 7)
 + W(2, 5, 5, 7, 7, 7)
 - W(2, 5, 5, 6, 7, 7)
 + W(2, 3, 5, 6, 7, 7)
 + W(2, 5, 5, 5, 7, 7)
 - W(2, 3, 5, 5, 7, 7)
 - W(2, 5, 5, 5, 6, 7)
 + W(2, 3, 5, 5, 6, 7)
 + W(2, 5, 5, 5, 5, 7)
 - W(2, 3, 5, 5, 5, 7)
 - W(3, 7, 8, 9, 9, 9)
 + W(3, 7, 9, 9, 9, 9)
 + W(3, 6, 7, 8, 9, 9)
 - W(3, 7, 7, 8, 9, 9)
 - W(4, 6, 7, 8, 9, 9)
 - W(2, 3, 7, 8, 9, 9)
 + W(4, 4, 7, 8, 9, 9)
 - W(3, 6, 7, 9, 9, 9)
 + W(3, 7, 7, 9, 9, 9)
 + W(4, 6, 7, 9, 9, 9)
 + W(2, 3, 7, 9, 9, 9)
 - W(3, 4, 6, 9, 9, 9)
 + W(3, 4, 7, 9, 9, 9)
 - W(4, 4, 7, 9, 9, 9)
 - W(2, 2, 3, 7, 8, 9)
 + W(2, 2, 3, 7, 9, 9)
 + W(3, 6, 7, 7, 8, 9)
 - W(3, 7, 7, 7, 8, 9)
 - W(4, 6, 7, 7, 8, 9)
 - W(2, 3, 7, 7, 8, 9)
 - W(4, 4, 6, 7, 8, 9)
 + W(4, 4, 7, 7, 8, 9)
 + W(4, 4, 4, 7, 8, 9)
 - W(3, 6, 7, 7, 9, 9)
 + W(3, 7, 7, 7, 9, 9)
 + W(4, 6, 7, 7, 9, 9)
 + W(2, 3, 7, 7, 9, 9)
 + W(4, 4, 6, 7, 9, 9)
 - W(4, 4, 7, 7, 9, 9)
 - W(2, 3, 4, 6, 9, 9)
 + W(2, 3, 4, 7, 9, 9)
 + W(2, 4, 4, 6, 9, 9)
 - W(2, 4, 4, 7, 9, 9)
 - W(3, 4, 4, 6, 9, 9)
 + W(3, 4, 4, 7, 9, 9)
 - W(4, 4, 4, 7, 9, 9)
 - W(2, 2, 3, 7, 7, 8)
 - W(2, 2, 2, 3, 7, 8)
 + W(2, 2, 3, 4, 6, 8)
 - W(2, 2, 4, 4, 6, 8)
 + W(2, 2, 3, 7, 7, 9)
 + W(2, 2, 2, 3, 7, 9)
 - W(2, 2, 3, 4, 6, 9)
 + W(2, 2, 3, 4, 7, 9)
 + W(2, 2, 4, 4, 6, 9)
 - W(2, 2, 4, 4, 7, 9)
 + W(3, 6, 7, 7, 7, 8)
 - W(3, 7, 7, 7, 7, 8)
 - W(4, 6, 7, 7, 7, 8)
 - W(2, 3, 7, 7, 7, 8)
 - W(4, 4, 6, 7, 7, 8)
 + W(4, 4, 7, 7, 7, 8)
 + W(4, 4, 4, 7, 7, 8)
 + W(2, 3, 4, 4, 6, 8)
 - W(2, 4, 4, 4, 6, 8)
 + W(3, 4, 4, 4, 6, 8)
 - W(4, 4, 4, 4, 6, 8)
 + W(4, 4, 4, 4, 7, 8)
 - W(3, 6, 7, 7, 7, 9)
 + W(3, 7, 7, 7, 7, 9)
 + W(4, 6, 7, 7, 7, 9)
 + W(2, 3, 7, 7, 7, 9)
 + W(4, 4, 6, 7, 7, 9)
 - W(4, 4, 7, 7, 7, 9)
 + W(4, 4, 4, 6, 7, 9)
 - W(4, 4, 4, 7, 7, 9)
 - W(2, 3, 4, 4, 6, 9)
 + W(2, 4, 4, 4, 6, 9)
 - W(3, 4, 4, 4, 6, 9)
 - W(4, 4, 4, 4, 7, 9)
 + W(3, 4, 8, 9, 9, 9)
 - W(2, 4, 8, 9, 9, 9)
 - W(2, 2, 4, 8, 9, 9)
 - W(3, 5, 7, 8, 9, 9)
 + W(2, 3, 4, 8, 9, 9)
 + W(3, 4, 4, 8, 9, 9)
 - W(2, 4, 4, 8, 9, 9)
 + W(3, 5, 7, 7, 9, 9)
 + W(2, 2, 3, 4, 8, 9)
 - W(2, 2, 2, 4, 8, 9)
 - W(2, 2, 4, 4, 8, 9)
 - W(3, 5, 7, 7, 8, 9)
 + W(2, 3, 4, 4, 8, 9)
 + W(3, 4, 4, 4, 8, 9)
 - W(2, 4, 4, 4, 8, 9)
 + W(3, 5, 7, 7, 7, 9)
 + W(2, 3, 4, 4, 7, 9)
 + W(3, 4, 4, 4, 7, 9)
 - W(2, 4, 4, 4, 7, 9)
 - W(2, 2, 2, 2, 4, 8)
 + W(2, 2, 2, 3, 4, 8)
 + W(2, 2, 3, 4, 4, 8)
 - W(2, 2, 3, 4, 5, 8)
 - W(2, 2, 2, 4, 4, 8)
 + W(2, 2, 2, 4, 5, 8)
 - W(2, 2, 4, 4, 4, 8)
 + W(2, 2, 4, 4, 5, 8)
 + W(2, 2, 4, 7, 7, 7)
 - W(2, 2, 3, 4, 7, 7)
 + W(2, 2, 2, 4, 7, 7)
 + W(2, 2, 4, 4, 7, 7)
 - W(2, 2, 4, 5, 7, 7)
 + W(2, 2, 3, 4, 5, 7)
 - W(2, 2, 2, 4, 5, 7)
 - W(2, 2, 4, 4, 5, 7)
 - W(3, 5, 7, 7, 7, 8)
 + W(2, 3, 4, 4, 4, 8)
 - W(2, 3, 4, 4, 5, 8)
 + W(3, 4, 4, 4, 4, 8)
 - W(3, 4, 4, 4, 5, 8)
 - W(2, 4, 4, 4, 4, 8)
 + W(2, 4, 4, 4, 5, 8)
 - W(3, 4, 7, 7, 7, 7)
 + W(3, 5, 7, 7, 7, 7)
 + W(2, 4, 7, 7, 7, 7)
 - W(2, 3, 4, 7, 7, 7)
 - W(3, 4, 4, 7, 7, 7)
 + W(2, 4, 4, 7, 7, 7)
 - W(2, 4, 5, 7, 7, 7)
 - W(2, 3, 4, 4, 7, 7)
 + W(2, 3, 4, 5, 7, 7)
 - W(3, 4, 4, 4, 7, 7)
 + W(3, 4, 4, 5, 7, 7)
 + W(2, 4, 4, 4, 7, 7)
 - W(2, 4, 4, 5, 7, 7)
 + W(2, 3, 4, 4, 5, 7)
 + W(3, 4, 4, 4, 5, 7)
 - W(2, 4, 4, 4, 5, 7)
 - W(3, 5, 9, 9, 9, 9)
 + W(4, 5, 9, 9, 9, 9)
 - W(2, 3, 5, 9, 9, 9)
 + W(2, 4, 5, 9, 9, 9)
 - W(3, 4, 5, 9, 9, 9)
 + W(3, 5, 6, 8, 9, 9)
 - W(3, 6, 6, 8, 9, 9)
 + W(3, 6, 6, 9, 9, 9)
 - W(4, 4, 5, 8, 9, 9)
 + W(4, 4, 5, 9, 9, 9)
 - W(4, 5, 6, 8, 9, 9)
 + W(4, 6, 6, 8, 9, 9)
 - W(4, 6, 6, 9, 9, 9)
 - W(2, 2, 3, 5, 9, 9)
 + W(2, 2, 4, 5, 9, 9)
 - W(2, 3, 4, 5, 9, 9)
 - W(2, 3, 6, 6, 8, 9)
 + W(2, 3, 6, 6, 9, 9)
 + W(2, 4, 4, 5, 9, 9)
 + W(2, 4, 6, 6, 8, 9)
 - W(3, 4, 4, 5, 9, 9)
 - W(3, 4, 6, 6, 8, 9)
 + W(3, 5, 6, 6, 8, 9)
 - W(3, 6, 6, 6, 8, 9)
 + W(3, 6, 6, 6, 9, 9)
 - W(4, 4, 4, 5, 8, 9)
 + W(4, 4, 4, 5, 9, 9)
 - W(4, 4, 5, 6, 8, 9)
 + W(4, 4, 5, 6, 9, 9)
 + W(4, 4, 6, 6, 8, 9)
 - W(4, 4, 6, 6, 9, 9)
 - W(4, 5, 6, 6, 8, 9)
 + W(4, 5, 6, 6, 9, 9)
 + W(4, 6, 6, 6, 8, 9)
 - W(4, 6, 6, 6, 9, 9)
 - W(2, 2, 2, 3, 5, 9)
 + W(2, 2, 2, 4, 5, 9)
 - W(2, 2, 3, 4, 5, 9)
 + W(2, 2, 3, 6, 6, 9)
 + W(2, 2, 4, 4, 5, 9)
 - W(2, 3, 4, 4, 5, 9)
 + W(2, 3, 6, 6, 6, 9)
 + W(2, 4, 4, 4, 5, 9)
 - W(3, 4, 4, 4, 5, 9)
 + W(3, 6, 6, 6, 6, 9)
 + W(4, 4, 4, 4, 5, 9)
 + W(4, 4, 4, 5, 6, 9)
 - W(4, 4, 4, 6, 6, 9)
 + W(4, 4, 5, 6, 6, 9)
 - W(4, 4, 6, 6, 6, 9)
 + W(4, 5, 6, 6, 6, 9)
 - W(4, 6, 6, 6, 6, 9)
 - W(3, 5, 6, 7, 9, 9)
 - W(2, 5, 6, 6, 9, 9)
 - W(2, 2, 5, 6, 6, 9)
 - W(3, 5, 6, 6, 7, 9)
 + W(3, 4, 6, 6, 7, 9)
 - W(2, 5, 6, 6, 6, 9)
 + W(2, 5, 6, 6, 7, 9)
 - W(2, 4, 6, 6, 7, 9)
 + W(2, 2, 2, 3, 5, 6)
 - W(2, 2, 2, 3, 4, 6)
 - W(2, 2, 2, 2, 5, 6)
 + W(2, 2, 2, 2, 4, 6)
 + W(2, 2, 3, 4, 5, 6)
 - W(2, 2, 3, 4, 4, 6)
 + W(2, 2, 3, 5, 6, 6)
 - W(2, 2, 3, 4, 6, 6)
 - W(2, 2, 2, 4, 5, 6)
 + W(2, 2, 2, 4, 4, 6)
 - W(2, 2, 2, 5, 6, 6)
 + W(2, 2, 2, 4, 6, 6)
 + W(2, 3, 4, 4, 5, 6)
 - W(2, 3, 4, 4, 4, 6)
 + W(2, 3, 4, 5, 6, 6)
 - W(2, 3, 4, 4, 6, 6)
 + W(2, 3, 5, 6, 6, 6)
 - W(2, 3, 4, 6, 6, 6)
 - W(2, 2, 4, 4, 5, 6)
 + W(2, 2, 4, 4, 4, 6)
 - W(2, 2, 4, 5, 6, 6)
 + W(2, 2, 4, 4, 6, 6)
 - W(2, 2, 5, 6, 6, 6)
 + W(2, 2, 5, 6, 6, 7)
 + W(2, 2, 4, 6, 6, 6)
 + W(3, 4, 4, 4, 5, 6)
 - W(3, 4, 4, 4, 4, 6)
 + W(3, 4, 4, 5, 6, 6)
 - W(3, 4, 4, 4, 6, 6)
 + W(3, 4, 5, 6, 6, 6)
 - W(3, 4, 4, 6, 6, 6)
 + W(3, 5, 6, 6, 6, 6)
 - W(3, 4, 6, 6, 6, 6)
 - W(2, 4, 4, 4, 5, 6)
 + W(2, 4, 4, 4, 4, 6)
 - W(2, 4, 4, 5, 6, 6)
 + W(2, 4, 4, 4, 6, 6)
 - W(2, 4, 5, 6, 6, 6)
 + W(2, 4, 4, 6, 6, 6)
 - W(2, 5, 6, 6, 6, 6)
 + W(2, 5, 6, 6, 6, 7)
 + W(2, 4, 6, 6, 6, 6)
)



num_points = 9
weight = 6
known_eliminations_5 = {}
known_eliminations_3 = {}

find_eliminations(known_eliminations_5, project_on_x1(
    + Li6(1,2,3,4,5,6)
    ,
    keep_annotations=True,
), num_points, weight, projection_axis=1, min_distinct=5)

find_eliminations(known_eliminations_3, project_on_x1(
    + Li6(1,2,3,4)
    ,
    keep_annotations=True,
), num_points, weight, projection_axis=1, min_distinct=3)

print_eliminations(known_eliminations_5, 5)
print_eliminations(known_eliminations_3, 3)

axis = 1
# print_with_title("Goal functional expr", goal_raw.annotations())
# print_with_title("Goal before Lyndon", goal_before_lyndon)
print_with_title("Goal", goal)

eliminated_5 = apply_eliminations(known_eliminations_5, goal, axis, min_distinct=5)
eliminated_3 = apply_eliminations(known_eliminations_3, eliminated_5.without_annotations(), axis, min_distinct=3)
eliminated = eliminated_3.without_annotations()
eliminated_annotations = (eliminated_5 + eliminated_3).annotations()
print_with_title("After eliminations", eliminated)
print_with_title("After eliminations, filtered", words_with_n_distinct_chars(eliminated.without_annotations(), 5))
print_with_title("Elimination expression", eliminated_annotations)
assert eliminated == Linear()
elimination_expr = Linear()
for annotation, coeff in eliminated_annotations.items():
    elimination_expr += coeff * annotation_to_func(annotation)
# print_with_title("Elimination expression reconstructed", elimination_expr.annotations())
goal_raw += elimination_expr

print(f"\n\n=== Result for projection on X1 ===\n")
print_with_title("LHS", goal_orig.annotations())
print_with_title("RHS", (goal_orig - goal_raw).annotations())
